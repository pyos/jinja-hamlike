// Lines that start with `//` are comments.
// Tags are created with `%`.
%!doctype html
%html
  // Their contents are indentation-sensitive.
  %head
    // Tags use standard HTML syntax for attributes.
    %meta charset="utf-8"
    // Everything until the end of the line OR the next `->` is an attribute.
    // An arrow is equivalent to a line break and a 2-space indent.
    %title -> A simple page
  %body
    // `-` starts a Jinja control statement, `=` - an expression.
    // Control statements are also indentation-sensitive.
    -if 1 > 0
      -set greeting = "Hello, World!"
    -else
      -set greeting = "Oh crap."

    %h1 id="page-heading" -> =greeting
    %p  id="main-content"
      This is an example page intended to showcase hamlike syntax.<br>
      You may have noticed that it contains a lot of blank lines when rendered;<br>
      that's what's left of the comments. Hamlike preserves all line breaks<br>
      to make debugging easier. Set <code>environment.trim_blocks</code> to <code>True</code>
      if you want to strip redundant whitespace for some reason.

    %p id="escape-example"
      // If you want a literal line starting with any of the special
      // characters, prefix it with `\`.
      \- is a literal dash.
      \\ this applies to <code>\</code> itself, too.

    // Oh, and inline HTML/Jinja tags are allowed, too.
    %footer class="text-{{ 'muted' }}"
      <p>That's all!</p>
